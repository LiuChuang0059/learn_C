# 位运算符
> 位运算符作用于整数类型的运算对象，把运算对象看出是二进制位的集合。

**位运算符用于处理无符号类型**


# 移位运算符

* 令左侧运算对象的内容按照右侧运算对象的要求移动指定的位数
* 经过移动的左侧运算对象拷贝为求值结果
* 过程中可能进行了提升

```cpp
unsigned char bits =0233 //八进制的字面值
bits<< 8 // bits提升为int类型，然后左移
```

# 位求反运算符
```cpp
unsigned char bits  =0227 ;
^bits
```
char 首先提升为int类型，之后逐位取反。

# 位与 ， 位或， 位异或 运算符

* 位与 &  ： 两个运算对象的对应位置都是 1 ，结果位1 
* 位或 |  ： 对应位置至少有一个 1 
* 位异或  ：   有且只有1个 1 则运算结果为1.

```cpp
unsigned long quiz1 = 0;
unsigned long 1ul = 1; // 整数字面值1
1ul << 27;  // 第27位 是1
quizl |=1ul << 27;//
quiz1 = quiz1 | 1ul <<27;
quiz1 &= ^(1ul<< 27);
```









